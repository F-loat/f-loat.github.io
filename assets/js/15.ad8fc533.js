(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{366:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("ol",{attrs:{start:"11"}},[a("li",[t._v("算法手写题")]),t._v(" "),a("li",[t._v("JS 异步解决方案的发展历程以及优缺点")]),t._v(" "),a("li",[a("code",[t._v("Promise")]),t._v(" 构造函数是同步执行还是异步执行，那么 "),a("code",[t._v("then")]),t._v(" 方法呢")]),t._v(" "),a("li",[t._v("情人节福利题，如何实现一个 "),a("code",[t._v("new")])]),t._v(" "),a("li",[t._v("简单讲解一下 "),a("code",[t._v("HTTP2")]),t._v(" 的多路复用")]),t._v(" "),a("li",[t._v("对 "),a("code",[t._v("TCP")]),t._v(" 三次握手和四次挥手的理解")]),t._v(" "),a("li",[t._v("A、B 机器正常连接后，B 机器突然重启，问 A 此时处于 "),a("code",[t._v("TCP")]),t._v(" 什么状态")]),t._v(" "),a("li",[t._v("React 中 "),a("code",[t._v("setState")]),t._v(" 什么时候是同步的，什么时候是异步的")]),t._v(" "),a("li",[t._v("React "),a("code",[t._v("setState")]),t._v(" 笔试题，下面的代码输出什么")]),t._v(" "),a("li",[t._v("介绍下 "),a("code",[t._v("npm")]),t._v(" 模块安装机制，为什么输入 "),a("code",[t._v("npm install")]),t._v(" 就可以自动安装对应的模块")])]),t._v(" "),a("h2",{attrs:{id:"_11-算法手写题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-算法手写题","aria-hidden":"true"}},[t._v("#")]),t._v(" 11. "),a("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/8",target:"_blank",rel:"noopener noreferrer"}},[t._v("算法手写题"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("已知如下数组：")]),t._v(" "),a("p",[t._v("var arr = [[1, 2, 2], [3, 4, 5, 5], [6, 7, 8, 9, [11, 12, [12, 13, [14]]]], 10];")]),t._v(" "),a("p",[t._v("编写一个程序将数组扁平化去并除其中重复部分数据，最终得到一个升序且不重复的数组")])]),t._v(" "),a("p",[a("strong",[t._v("Array.from(new Set(arr.flat(Infinity))).sort((a,b) => (a-b))")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Array.flat(Infinity)")]),t._v(" 打平任意层数组")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Array.flatMap()")]),t._v(" 对原数组的每个成员执行一个函数，然后对返回值组成的数组执行 "),a("code",[t._v("flat()")]),t._v(" 方法，只能打平一层")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("flat")]),t._v(" 与 "),a("code",[t._v("flatMap")]),t._v(" 方法均返回新数组，不会修改原有数组")])])]),t._v(" "),a("h2",{attrs:{id:"_12-js-异步解决方案的发展历程以及优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-js-异步解决方案的发展历程以及优缺点","aria-hidden":"true"}},[t._v("#")]),t._v(" 12. "),a("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/11",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 异步解决方案的发展历程以及优缺点"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("callback -> Promise -> Generator -> Async/await")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("callback")]),t._v(" 不能用 "),a("code",[t._v("try catch")]),t._v(" 捕获错误，不能 "),a("code",[t._v("return")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Promise")]),t._v(" 无法取消，错误需要通过回调函数来捕获")])])]),t._v(" "),a("h2",{attrs:{id:"_13-promise-构造函数是同步执行还是异步执行，那么-then-方法呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-promise-构造函数是同步执行还是异步执行，那么-then-方法呢","aria-hidden":"true"}},[t._v("#")]),t._v(" 13. "),a("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/19",target:"_blank",rel:"noopener noreferrer"}},[t._v("Promise 构造函数是同步执行还是异步执行，那么 then 方法呢"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("构造函数同步，then 方法异步")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("then")]),t._v(" 是微任务，会在本次任务执行完的时候执行")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("setTimeout")]),t._v(" 是宏任务，会在下次任务执行的时候执行")])])]),t._v(" "),a("h2",{attrs:{id:"_14-情人节福利题，如何实现一个-new"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-情人节福利题，如何实现一个-new","aria-hidden":"true"}},[t._v("#")]),t._v(" 14. "),a("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/12",target:"_blank",rel:"noopener noreferrer"}},[t._v("情人节福利题，如何实现一个 new"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("当代码 new Foo(...) 执行时，会发生以下事情：")]),t._v(" "),a("ol",[a("li",[t._v("一个继承自 Foo.prototype 的新对象被创建")]),t._v(" "),a("li",[t._v("使用指定的参数调用构造函数 Foo，并将 this 绑定到新创建的对象")]),t._v(" "),a("li",[t._v("由构造函数返回的对象就是 new 表达式的结果，如果构造函数没有显式返回一个对象，则使用步骤1创建的对象")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ret "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" ret "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_15-简单讲解一下-http2-的多路复用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-简单讲解一下-http2-的多路复用","aria-hidden":"true"}},[t._v("#")]),t._v(" 15. "),a("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/14",target:"_blank",rel:"noopener noreferrer"}},[t._v("简单讲解一下 http2 的多路复用"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("HTTP/1")]),t._v(" 每次请求都会建立一次 HTTP 连接")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("HTTP/1.1")]),t._v(" 默认开启 "),a("code",[t._v("keep-alive")]),t._v("，但单个连接无法交错请求，且会导致服务端连接数过多")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("HTTP2")]),t._v(" 同域名下所有通信都在单个连接上完成，单个连接上可以并行交错的请求和响应")])])]),t._v(" "),a("blockquote",[a("p",[t._v("HTTP2 的传输是基于二进制帧的。每一个 TCP 连接中承载了多个双向流通的流，每一个流都有一个独一无二的标识和优先级，而流就是由二进制帧组成的。二进制帧的头部信息会标识自己属于哪一个流，所以这些帧是可以交错传输，然后在接收端通过帧头的信息组装成完整的数据。这样就解决了线头阻塞的问题，同时也提高了网络速度的利用率。")])]),t._v(" "),a("h2",{attrs:{id:"_16-对-tcp-三次握手和四次挥手的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-对-tcp-三次握手和四次挥手的理解","aria-hidden":"true"}},[t._v("#")]),t._v(" 16. "),a("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/15",target:"_blank",rel:"noopener noreferrer"}},[t._v("对 TCP 三次握手和四次挥手的理解"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("三次握手之所以是三次是保证 client 和 server 均让对方知道自己的接收和发送能力没问题而保证的最小次数")])]),t._v(" "),a("blockquote",[a("p",[t._v("第一次 client => server，只能 server 判断出 client 具备发送能力\n第二次 server => client，client 就可以判断出 server 具备发送和接受能力。此时 client 还需让 server 知道自己接收能力没问题于是就有了第三次\n第三次 client => server，双方均保证了自己的接收和发送能力没有问题")]),t._v(" "),a("p",[t._v("其中，为了保证后续的握手是为了应答上一个握手，每次握手都会带一个标识 seq，后续的 ACK 都会对这个 seq 进行加一来进行确认")])]),t._v(" "),a("p",[a("strong",[a("a",{attrs:{href:"https://juejin.im/post/5c078058f265da611c26c235",target:"_blank",rel:"noopener noreferrer"}},[t._v("作为前端的你了解多少 TCP 的内容"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"_17-a、b-机器正常连接后，b-机器突然重启，问-a-此时处于-tcp-什么状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-a、b-机器正常连接后，b-机器突然重启，问-a-此时处于-tcp-什么状态","aria-hidden":"true"}},[t._v("#")]),t._v(" 17. "),a("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/21",target:"_blank",rel:"noopener noreferrer"}},[t._v("A、B 机器正常连接后，B 机器突然重启，问 A 此时处于 TCP 什么状态"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("服务器和客户建立连接后，若服务器主机崩溃，有两种可能：")]),t._v(" "),a("ol",[a("li",[t._v("服务器不重启，客户继续工作，就会发现对方没有回应(ETIMEOUT)，路由器聪明的话，则是目的地不可达(EHOSTUNREACH)。")]),t._v(" "),a("li",[t._v("服务器重启后，客户继续工作，然而服务器已丢失客户信息，收到客户数据后响应RST。")])])]),t._v(" "),a("p",[a("strong",[a("a",{attrs:{href:"https://crystalwindz.com/unp_note_1",target:"_blank",rel:"noopener noreferrer"}},[t._v("UNP-网络编程基础"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"_18-react-中-setstate-什么时候是同步的，什么时候是异步的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-react-中-setstate-什么时候是同步的，什么时候是异步的","aria-hidden":"true"}},[t._v("#")]),t._v(" 18. "),a("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/17",target:"_blank",rel:"noopener noreferrer"}},[t._v("React 中 setState 什么时候是同步的，什么时候是异步的"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("在 React 中，如果是由 React 引发的事件处理（比如通过onClick引发的事件处理），调用 setState 不会同步更新 this.state，除此之外的 setState 调用会同步更新 this.state。所谓“除此之外”，指的是绕过 React 通过 addEventListener 直接添加的事件处理函数，还有通过 setTimeout/setInterval 产生的异步调用。")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("React 的 "),a("code",[t._v("setState")]),t._v(" 函数实现中，会根据变量 "),a("code",[t._v("isBatchingUpdates")]),t._v(" 判断是同步还是异步更新 "),a("code",[t._v("this.state")]),t._v("，"),a("code",[t._v("isBatchingUpdates")]),t._v(" 默认为 "),a("code",[t._v("false")])])]),t._v(" "),a("li",[a("p",[t._v("React 在调用事件处理函数之前会调用 "),a("code",[t._v("batchedUpdates")]),t._v(" 函数把 "),a("code",[t._v("isBatchingUpdates")]),t._v(" 修改为 "),a("code",[t._v("true")]),t._v("，更新完成后恢复为 "),a("code",[t._v("false")])])]),t._v(" "),a("li",[a("p",[t._v("考虑到性能问题，可能会对多次调用作批处理，将多个 "),a("code",[t._v("nextState")]),t._v(" 浅合并到当前 "),a("code",[t._v("state")]),t._v("，可在调用 "),a("code",[t._v("setState")]),t._v(" 时通过传入函数避免")])])]),t._v(" "),a("h2",{attrs:{id:"_19-react-setstate-笔试题，下面的代码输出什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-react-setstate-笔试题，下面的代码输出什么","aria-hidden":"true"}},[t._v("#")]),t._v(" 19. "),a("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/18",target:"_blank",rel:"noopener noreferrer"}},[t._v("React setState 笔试题，下面的代码输出什么"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Example")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidMount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// state.val === 0")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第 1 次 log")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// state.val === 0")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第 2 次 log")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// state.val === 1")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第 3 次 log")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// state.val === 2")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第 4 次 log")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("输出：0 0 2 3")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("第一次和第二次都是在 react 自身生命周期内，触发时 "),a("code",[t._v("isBatchingUpdates")]),t._v(" 为 "),a("code",[t._v("true")]),t._v("，不会直接执行更新 "),a("code",[t._v("state")]),t._v("，而是加入了 "),a("code",[t._v("dirtyComponents")])])]),t._v(" "),a("li",[a("p",[t._v("两次 "),a("code",[t._v("setState")]),t._v(" 时，获取到 "),a("code",[t._v("this.state.val")]),t._v(" 都是 0，所以执行时都是将 0 设置成 1，在 "),a("code",[t._v("react")]),t._v(" 内部会被合并掉，只执行一次")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("setTimeout")]),t._v(" 中的代码，触发时 "),a("code",[t._v("isBatchingUpdates")]),t._v(" 为 "),a("code",[t._v("false")]),t._v("，会直接进行更新")])])]),t._v(" "),a("h2",{attrs:{id:"_20-介绍下-npm-模块安装机制，为什么输入-npm-install-就可以自动安装对应的模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-介绍下-npm-模块安装机制，为什么输入-npm-install-就可以自动安装对应的模块","aria-hidden":"true"}},[t._v("#")]),t._v(" 20. "),a("a",{attrs:{href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/22",target:"_blank",rel:"noopener noreferrer"}},[t._v("介绍下 npm 模块安装机制，为什么输入 npm install 就可以自动安装对应的模块"),a("OutboundLink")],1)]),t._v(" "),a("ol",[a("li",[t._v("npm 模块安装机制：")])]),t._v(" "),a("ul",[a("li",[t._v("发出 "),a("code",[t._v("npm install")]),t._v(" 命令")]),t._v(" "),a("li",[t._v("查询 "),a("code",[t._v("node_modules")]),t._v(" 目录之中是否已经存在指定模块\n"),a("ul",[a("li",[t._v("若存在，不再重新安装")]),t._v(" "),a("li",[t._v("若不存在\n"),a("ul",[a("li",[t._v("npm 向 registry 查询模块压缩包的网址")]),t._v(" "),a("li",[t._v("下载压缩包，存放在根目录下的 "),a("code",[t._v(".npm")]),t._v(" 目录里")]),t._v(" "),a("li",[t._v("解压压缩包到当前项目的 "),a("code",[t._v("node_modules")]),t._v(" 目录")])])])])])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[t._v("npm 实现原理 (v5.5.1)：")]),t._v(" "),a("ol",[a("li",[t._v("执行工程自身 preinstall")]),t._v(" "),a("li",[t._v("确定首层依赖模块")]),t._v(" "),a("li",[t._v("获取模块")]),t._v(" "),a("li",[t._v("模块扁平化 (去重)")]),t._v(" "),a("li",[t._v("安装模块")]),t._v(" "),a("li",[t._v("执行工程自身生命周期")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("模块安装时模块自身及项目的 "),a("code",[t._v("pre/post")]),t._v(" 钩子将按顺序调用")])])])},[],!1,null,null,null);s.default=e.exports}}]);